{"ast":null,"code":"import _regeneratorRuntime from \"/Users/colespencer/Documents/Programming/NavantiDashboard/navanti-dashboard-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/colespencer/Documents/Programming/NavantiDashboard/navanti-dashboard-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/colespencer/Documents/Programming/NavantiDashboard/navanti-dashboard-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/colespencer/Documents/Programming/NavantiDashboard/navanti-dashboard-frontend/src/views/mainPage.js\";\nimport React, { useState, useEffect } from 'react';\n\nfunction MainPage() {\n  var _this = this;\n\n  // Declare a new state variable, which we'll call \"count\"\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        greeting = _useState2[0],\n        setGreeting = _useState2[1];\n\n  useEffect(() => {\n    callApi().then(res => setGreeting(res.express)).catch(err => console.log(err));\n  }, []);\n\n  const callApi = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response, body;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch('/api/hello');\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return response.json();\n\n          case 5:\n            body = _context.sent;\n\n            if (!(response.status !== 200)) {\n              _context.next = 8;\n              break;\n            }\n\n            throw Error(body.message);\n\n          case 8:\n            return _context.abrupt(\"return\", body);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n\n    return function callApi() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  const handleSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e) {\n      var response, body;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            e.preventDefault();\n            _context2.next = 3;\n            return fetch('/api/world', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                post: _this.state.post\n              })\n            });\n\n          case 3:\n            response = _context2.sent;\n            _context2.next = 6;\n            return response.text();\n\n          case 6:\n            body = _context2.sent;\n\n            _this.setState({\n              responseToPost: body\n            });\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, greeting);\n}\n\nexport default MainPage;","map":{"version":3,"sources":["/Users/colespencer/Documents/Programming/NavantiDashboard/navanti-dashboard-frontend/src/views/mainPage.js"],"names":["React","useState","useEffect","MainPage","greeting","setGreeting","callApi","then","res","express","catch","err","console","log","fetch","response","json","body","status","Error","message","handleSubmit","e","preventDefault","method","headers","JSON","stringify","post","state","text","setState","responseToPost"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAClB;AADkB,oBAEcF,QAAQ,CAAC,EAAD,CAFtB;AAAA;AAAA,QAEXG,QAFW;AAAA,QAEDC,WAFC;;AAIlBH,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,OAAO,GACJC,IADH,CACQC,GAAG,IAAIH,WAAW,CAACG,GAAG,CAACC,OAAL,CAD1B,EAEGC,KAFH,CAESC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFhB;AAGD,GAJQ,EAIP,EAJO,CAAT;;AAMA,QAAML,OAAO;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACSQ,KAAK,CAAC,YAAD,CADd;;AAAA;AACRC,YAAAA,QADQ;AAAA;AAAA,mBAEKA,QAAQ,CAACC,IAAT,EAFL;;AAAA;AAERC,YAAAA,IAFQ;;AAAA,kBAIVF,QAAQ,CAACG,MAAT,KAAoB,GAJV;AAAA;AAAA;AAAA;;AAAA,kBAIqBC,KAAK,CAACF,IAAI,CAACG,OAAN,CAJ1B;;AAAA;AAAA,6CAMPH,IANO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAPX,OAAO;AAAA;AAAA;AAAA,KAAb;;AASA,QAAMe,YAAY;AAAA,yEAAG,kBAAMC,CAAN;AAAA;AAAA;AAAA;AAAA;AACnBA,YAAAA,CAAC,CAACC,cAAF;AADmB;AAAA,mBAEIT,KAAK,CAAC,YAAD,EAAe;AACzCU,cAAAA,MAAM,EAAE,MADiC;AAEzCC,cAAAA,OAAO,EAAE;AACP,gCAAgB;AADT,eAFgC;AAKzCR,cAAAA,IAAI,EAAES,IAAI,CAACC,SAAL,CAAe;AAAEC,gBAAAA,IAAI,EAAE,KAAI,CAACC,KAAL,CAAWD;AAAnB,eAAf;AALmC,aAAf,CAFT;;AAAA;AAEbb,YAAAA,QAFa;AAAA;AAAA,mBASAA,QAAQ,CAACe,IAAT,EATA;;AAAA;AASbb,YAAAA,IATa;;AAWnB,YAAA,KAAI,CAACc,QAAL,CAAc;AAAEC,cAAAA,cAAc,EAAEf;AAAlB,aAAd;;AAXmB;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAZI,YAAY;AAAA;AAAA;AAAA,KAAlB;;AAcA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGjB,QADH,CADF;AAKD;;AAED,eAAeD,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction MainPage() {\n  // Declare a new state variable, which we'll call \"count\"\n  const [greeting, setGreeting] = useState('');\n\n  useEffect(() => {\n    callApi()\n      .then(res => setGreeting(res.express))\n      .catch(err => console.log(err));\n  },[]);\n\n  const callApi = async () => {\n    const response = await fetch('/api/hello');\n    const body = await response.json();\n\n    if (response.status !== 200) throw Error(body.message);\n\n    return body;\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const response = await fetch('/api/world', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ post: this.state.post }),\n    });\n    const body = await response.text();\n\n    this.setState({ responseToPost: body });\n  };\n\n  return (\n    <div>\n      {greeting}\n    </div>\n  );\n}\n\nexport default MainPage;"]},"metadata":{},"sourceType":"module"}